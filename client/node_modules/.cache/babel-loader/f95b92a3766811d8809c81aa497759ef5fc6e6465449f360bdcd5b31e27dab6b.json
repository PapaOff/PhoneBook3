{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebFMI\\\\phonebook3\\\\client\\\\src\\\\TestGetImages.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getImages } from './getImages';\nimport { useUser } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TestGetImages() {\n  _s();\n  const {\n    userId,\n    setUserId\n  } = useUser();\n  const [imageUrls, setImageUrls] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleGetImages = async () => {\n    if (!userId) return;\n    try {\n      setLoading(true);\n      console.log('Fetching images for userId:', userId);\n      const urls = await getImages(userId);\n      console.log('Fetched URLs:', urls);\n      setImageUrls(urls);\n    } catch (error) {\n      alert('Failed to fetch images');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter User ID\",\n      value: userId,\n      onChange: e => setUserId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGetImages,\n      disabled: loading,\n      children: loading ? 'Fetching...' : 'Get Images'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: imageUrls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Images for User: \", userId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: url,\n              alt: `User Image ${index + 1}`,\n              width: \"200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TestGetImages, \"mYbrqVR0ITTB4ZD6pDK5+dD48ss=\", false, function () {\n  return [useUser];\n});\n_c = TestGetImages;\nexport default TestGetImages;\nvar _c;\n$RefreshReg$(_c, \"TestGetImages\");","map":{"version":3,"names":["React","useState","getImages","useUser","jsxDEV","_jsxDEV","TestGetImages","_s","userId","setUserId","imageUrls","setImageUrls","loading","setLoading","handleGetImages","console","log","urls","error","alert","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","length","map","url","index","src","alt","width","_c","$RefreshReg$"],"sources":["D:/WebFMI/phonebook3/client/src/TestGetImages.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { getImages } from './getImages';\r\nimport { useUser } from './UserContext';\r\n\r\nfunction TestGetImages() {\r\n  const { userId, setUserId } = useUser();\r\n  const [imageUrls, setImageUrls] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleGetImages = async () => {\r\n    if (!userId) return;\r\n\r\n    try {\r\n      setLoading(true);\r\n      console.log('Fetching images for userId:', userId);\r\n      const urls = await getImages(userId);\r\n      console.log('Fetched URLs:', urls);\r\n      setImageUrls(urls);\r\n    } catch (error) {\r\n      alert('Failed to fetch images');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Enter User ID\"\r\n        value={userId}\r\n        onChange={(e) => setUserId(e.target.value)}\r\n      />\r\n      <button onClick={handleGetImages} disabled={loading}>\r\n        {loading ? 'Fetching...' : 'Get Images'}\r\n      </button>\r\n      <div>\r\n        {imageUrls.length > 0 && (\r\n          <div>\r\n            <h3>Images for User: {userId}</h3>\r\n            <ul>\r\n              {imageUrls.map((url, index) => (\r\n                <li key={index}>\r\n                  <img src={url} alt={`User Image ${index + 1}`} width=\"200\" />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestGetImages;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}